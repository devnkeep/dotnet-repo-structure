[*.{cs,vb}]

#### Code Editor ####

end_of_line = crlf
insert_final_newline = true
indent_style = space
indent_size = 4
tab_width = 4

#### Analyzers ####

# CA1054: Uri parameters should not be strings
dotnet_diagnostic.CA1054.severity = suggestion

# CA1056: Uri properties should not be strings
dotnet_diagnostic.CA1056.severity = suggestion

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = none

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# IDE0055: Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true

# IDE0065: Using directive placement
csharp_using_directive_placement = inside_namespace:warning

# IDE0090: Simplify new expression
# Disabled due to conflict with SA1000.
# The next stable version of StyleCop.Analyzers should fix this.
csharp_style_implicit_object_creation_when_type_is_apparent = false

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = none

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = none

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_field_should_be_begins_with_underscore.severity = warning
dotnet_naming_rule.private_field_should_be_begins_with_underscore.symbols = private_field
dotnet_naming_rule.private_field_should_be_begins_with_underscore.style = begins_with_underscore

dotnet_naming_rule.private_static_readonly_should_be_pascal_case.severity = warning
dotnet_naming_rule.private_static_readonly_should_be_pascal_case.symbols = private_static_readonly
dotnet_naming_rule.private_static_readonly_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_const_should_be_pascal_case.severity = warning
dotnet_naming_rule.private_const_should_be_pascal_case.symbols = private_const
dotnet_naming_rule.private_const_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private
dotnet_naming_symbols.private_field.required_modifiers = 

dotnet_naming_symbols.private_static_readonly.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly.required_modifiers = readonly, static

dotnet_naming_symbols.private_const.applicable_kinds = field
dotnet_naming_symbols.private_const.applicable_accessibilities = private
dotnet_naming_symbols.private_const.required_modifiers = const

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix = 
dotnet_naming_style.begins_with_underscore.word_separator = 
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

[*.{csproj,props,targets,xml}]

indent_style = space
indent_size = 2
tab_width = 2
